# creates a git commit message from git diff
#
# example: llm.git.msg
function llm.git.msg() {
    git diff --staged | llm  -s "Write a short git commit message for the following diff. Return only the commit message."
}

# compare two revisions of the current git repository
#
# example: llm.git.compare main developement
function llm.git.compare() {
    git diff $1 $2 | llm  -s "Create a comparision of the difference between. Output the findings structured by commit hash and a brief summary of the changes and output the files that are involved."
}

# creates test data for the file that is passed to that function
#
# example: llm.code.testdata user.ts
function llm.code.testdata() {
  local file_path="$1"
  
  # Check if a valid file path was provided
  if [[ -f "$file_path" ]]; then
    # Display the file content using 'cat' and pipe it into the LLM processing function
    cat "$file_path" | llm -s "create valid test data for the following interface. no explanation. only the test data as output"
  else
    echo "Error: File does not exist."
  fi
}

# explains the code that is passed as a file
#
# example: llm.code.explain user.ts
function llm.code.explain() {
  local file_path="$1"
  
  # Check if a valid file path was provided
  if [[ -f "$file_path" ]]; then
    cat "$file_path" | llm -s "Explain this code"
  else
    echo "Error: File does not exist."
  fi
}